<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Insulin Bolus Calculator</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
        }
        table {
            border-collapse: collapse;
            margin-top: 20px;
            width: 80%;
            margin-left: 10%;
        }
        table, th, td {
            border: 1px solid black;
        }
        th, td {
            padding: 10px;
            text-align: center;
        }
        th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>

    <h1>Insulin Bolus Calculator</h1>
    <h3>This is a research tool only, do not use in medical contexts or to calculate and administer insulin. Use T1D_Math at your own risk, and do not use the information or code to make medical decisions.</h3>
    <h4>Version 231212 - 12:23</h4>
    <!-- MCB I love you with all my heart -->

    <!-- Form to input values -->
    <form id="bolusForm">
        <label for="insulinFactor">Insulin Factor:</label>
        <input type="number" id="insulinFactor" required step="0.1"><br>

        <label for="carbs">Number of Carbs:</label>
        <input type="number" id="carbs" required step="1"><br>

        <label for="pfus">Number of PFUs:</label>
        <input type="number" id="pfus" step="1"><br>

        <button type="button" onclick="calculateBolus()">Calculate Bolus</button>
    </form>

    <hr>

    <!-- Display results -->
    <h2>Results</h2>
    <p id="totalInsulin">Total Insulin: N/A</p>
    <p id="extendedPercentage">Extended Bolus Percentage: N/A</p>

    <!-- Display CSV data as a table -->
    <h2>CSV Data</h2>
    <table id="csvDataTable">
        <!-- Table will be populated dynamically -->
    </table>

    <script>
        // Check for the presence of a cookie on page load
        window.onload = function () {
            checkForCookie();
            displayCSVData();
        };

        function calculateBolus() {
            // Retrieve values from the form
            var insulinFactor = parseFloat(document.getElementById("insulinFactor").value);
            var carbs = parseInt(document.getElementById("carbs").value);
            var pfus = parseInt(document.getElementById("pfus").value) || 0; // Set to 0 if blank

            // Check if values are valid
            if (isNaN(insulinFactor) || isNaN(carbs)) {
                alert("Please enter valid numbers.");
                return;
            }

            // Calculate total insulin
            var totalInsulin = (carbs + pfus) / insulinFactor;

            // Calculate extended bolus percentage
            var extendedPercentage = (pfus / (carbs + pfus)) * 100;

            // Display results
            document.getElementById("totalInsulin").textContent = "Total Insulin: " + totalInsulin.toFixed(2) + " units";
            document.getElementById("extendedPercentage").textContent = "Extended Bolus Percentage: " + extendedPercentage.toFixed(2) + "%";

            // Save input information in a cookie
            saveInputToCookie(insulinFactor, carbs, pfus);
        }

        function saveInputToCookie(insulinFactor, carbs, pfus) {
            var currentDate = new Date();
            var dateString = currentDate.toISOString();

            // Create an object to store input information
            var inputInfo = {
                insulinFactor: insulinFactor,
                carbs: carbs,
                pfus: pfus
            };

            // Convert the object to a JSON string
            var jsonString = JSON.stringify(inputInfo);

            // Set the cookie with an expiration date (30 days in this case)
            document.cookie = "bolusInput_" + dateString + "=" + jsonString + "; expires=" + new Date(currentDate.getTime() + 30 * 24 * 60 * 60 * 1000).toUTCString();
        }

        function checkForCookie() {
            // Get all cookies
            var allCookies = document.cookie.split(";");

            // Loop through cookies to find the latest insulin factor cookie
            for (var i = allCookies.length - 1; i >= 0; i--) {
                var cookie = allCookies[i].trim();
                if (cookie.indexOf("bolusInput_") === 0) {
                    // Extract and parse the JSON data from the cookie
                    var jsonData = cookie.substring("bolusInput_".length + 1);
                    var inputInfo = JSON.parse(jsonData);

                    // Populate the insulin factor input box
                    document.getElementById("insulinFactor").value = inputInfo.insulinFactor;
                    break;
                }
            }
        }

        function displayCSVData() {
            // Fetch data from the CSV file
            fetch('T1D_populate.csv', { mode: 'no-cors' }) // Add 'no-cors' mode
                .then(response => response.text())
                .then(data => {
                    // Parse CSV data
                    var rows = data.split('\n');
                    var tableData = [];

                    for (var i = 0; i < rows.length; i++) {
                        var rowData = rows[i].split(',');
                        tableData.push(rowData);
                    }

                    // Create and populate the table with CSV data
                    var table = document.getElementById("csvDataTable");
                    for (var i = 0; i < tableData.length; i++) {
                        var row = table.insertRow(i);
                        for (var j = 0; j < tableData[i].length; j++) {
                            var cell = row.insertCell(j);
                            cell.innerHTML = tableData[i][j];
                        }
                    }
                })
                .catch(error => console.error('Error fetching CSV:', error));
        }
    </script>

</body>
</html>
